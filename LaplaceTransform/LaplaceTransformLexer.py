# Generated from LaplaceTransform.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,16,91,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,4,8,58,8,
        8,11,8,12,8,59,1,9,4,9,63,8,9,11,9,12,9,64,1,9,1,9,4,9,69,8,9,11,
        9,12,9,70,3,9,73,8,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,
        1,14,1,15,4,15,86,8,15,11,15,12,15,87,1,15,1,15,0,0,16,1,1,3,2,5,
        3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,1,0,3,2,0,65,90,97,122,1,0,48,57,3,0,9,10,13,13,32,32,95,0,
        1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
        0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
        0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
        0,0,0,1,33,1,0,0,0,3,42,1,0,0,0,5,44,1,0,0,0,7,46,1,0,0,0,9,48,1,
        0,0,0,11,50,1,0,0,0,13,52,1,0,0,0,15,54,1,0,0,0,17,57,1,0,0,0,19,
        62,1,0,0,0,21,74,1,0,0,0,23,76,1,0,0,0,25,78,1,0,0,0,27,80,1,0,0,
        0,29,82,1,0,0,0,31,85,1,0,0,0,33,34,5,102,0,0,34,35,5,117,0,0,35,
        36,5,110,0,0,36,37,5,99,0,0,37,38,5,116,0,0,38,39,5,105,0,0,39,40,
        5,111,0,0,40,41,5,110,0,0,41,2,1,0,0,0,42,43,5,40,0,0,43,4,1,0,0,
        0,44,45,5,44,0,0,45,6,1,0,0,0,46,47,5,41,0,0,47,8,1,0,0,0,48,49,
        5,61,0,0,49,10,1,0,0,0,50,51,5,76,0,0,51,12,1,0,0,0,52,53,5,123,
        0,0,53,14,1,0,0,0,54,55,5,125,0,0,55,16,1,0,0,0,56,58,7,0,0,0,57,
        56,1,0,0,0,58,59,1,0,0,0,59,57,1,0,0,0,59,60,1,0,0,0,60,18,1,0,0,
        0,61,63,7,1,0,0,62,61,1,0,0,0,63,64,1,0,0,0,64,62,1,0,0,0,64,65,
        1,0,0,0,65,72,1,0,0,0,66,68,5,46,0,0,67,69,7,1,0,0,68,67,1,0,0,0,
        69,70,1,0,0,0,70,68,1,0,0,0,70,71,1,0,0,0,71,73,1,0,0,0,72,66,1,
        0,0,0,72,73,1,0,0,0,73,20,1,0,0,0,74,75,5,43,0,0,75,22,1,0,0,0,76,
        77,5,45,0,0,77,24,1,0,0,0,78,79,5,42,0,0,79,26,1,0,0,0,80,81,5,47,
        0,0,81,28,1,0,0,0,82,83,5,94,0,0,83,30,1,0,0,0,84,86,7,2,0,0,85,
        84,1,0,0,0,86,87,1,0,0,0,87,85,1,0,0,0,87,88,1,0,0,0,88,89,1,0,0,
        0,89,90,6,15,0,0,90,32,1,0,0,0,6,0,59,64,70,72,87,1,6,0,0
    ]

class LaplaceTransformLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    ID = 9
    NUMBER = 10
    PLUS = 11
    MINUS = 12
    MUL = 13
    DIV = 14
    POW = 15
    WS = 16

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'function'", "'('", "','", "')'", "'='", "'L'", "'{'", "'}'", 
            "'+'", "'-'", "'*'", "'/'", "'^'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "NUMBER", "PLUS", "MINUS", "MUL", "DIV", "POW", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "ID", "NUMBER", "PLUS", "MINUS", "MUL", "DIV", 
                  "POW", "WS" ]

    grammarFileName = "LaplaceTransform.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


